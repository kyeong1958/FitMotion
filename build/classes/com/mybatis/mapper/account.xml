<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.AccountMapper">

	<!--    ======================= 수근시작 ================================== //-->
	<!-- 1page 회원 연령별 비율 (누적 ) //-->
	<select id="memAge" parameterType="map" resultType="map">
		select m.age as 연령, count(m.age) as 인원수
		from (select CASE WHEN substr(mem_birth,1,4) between 2000 and 2009 THEN '10대'
		                 WHEN substr(mem_birth,1,4) between 1990 and 1999 THEN '20대'
		                 WHEN substr(mem_birth,1,4) between 1980 and 1989 THEN '30대'
		                 WHEN substr(mem_birth,1,4) between 1970 and 1979 THEN '40대'
		                 WHEN substr(mem_birth,1,4) between 1960 and 1969 THEN '50대'
		                 WHEN substr(mem_birth,1,4) between 1950 and 1959 THEN '60대'
		                 WHEN substr(mem_birth,1,4) between 1940 and 1949 THEN '70대'
		                 WHEN substr(mem_birth,1,4) between 1930 and 1939 THEN '80대'
		                 ELSE '10대 미만'
		             END AS age
		      from member) m
		group by m.age
		order by age asc
	</select>
	
	<!--   1page 회원 연령별 비율 ( 변동 )-->
	<select id="memAge2" parameterType="String" resultType="map">
		select m.age as 연령, count(distinct m.mem_num) as 인원수
        from (select CASE WHEN substr(mem_birth,1,4) between 2000 and 2009 THEN '10대'
                         WHEN substr(mem_birth,1,4) between 1990 and 1999 THEN '20대'
                         WHEN substr(mem_birth,1,4) between 1980 and 1989 THEN '30대'
                         WHEN substr(mem_birth,1,4) between 1970 and 1979 THEN '40대'
                         WHEN substr(mem_birth,1,4) between 1960 and 1969 THEN '50대'
                         WHEN substr(mem_birth,1,4) between 1950 and 1959 THEN '60대'
                         WHEN substr(mem_birth,1,4) between 1940 and 1949 THEN '70대'
                         WHEN substr(mem_birth,1,4) between 1930 and 1939 THEN '80대'
                         ELSE '10대 미만'
                     END AS age, mem_num
              from member) m , gym_sales g
        where m.mem_num = G.GS_DEP_MEM
        and substr(replace(GS_DEP_DATE,'/',''),1,6) = #{date}
        group by m.age
        order by age asc
	</select>	
	<!-- 1page 회원 남자, 여자 회원수 ( 누적 ) -->
	<select id="memCount" parameterType="map" resultType="map">
		select mem_gender as 자별, count(mem_num) as 명
		from member
		group by mem_gender
	</select>
	<!--1page 회원 남자, 여자 회원수 ( 변동 ) -->
	<select id="memCount2" parameterType="String" resultType="map">
		select mem_gender as 자별, count(mem_num) as 명
		from member m, gym_sales g
		where m.mem_num = g.gs_dep_mem and GS_STATE in ('이용중', '만료')
		and substr(replace(GS_DEP_DATE,'/',''),1,6) = #{date}
		group by(mem_gender)
	</select>	
	<!-- 1page 월별 매출 금액, 횟수  신규구매-->
	<select id="salespcNew" parameterType="String" resultType="map">
		select substr(GS_DEP_DATE,1,7) as 월, sum(GS_PAY_AMOUNT) as 총액, count(GS_PAY_AMOUNT) as 건수
		from GYM_SALES a
		where GS_STATE in ('이용중', '만료')
		and substr(replace(GS_DEP_DATE,'/',''),1,6) between to_number(#{date})-3 and to_number(#{date}) and gs_newandRepay = '신규결제'
		group by substr(GS_DEP_DATE,1,7)
		order by substr(GS_DEP_DATE,1,7) asc
	</select>	
	<!-- 1page 월별 매출 금액, 횟수 재구매 -->
	<select id="salespcRe" parameterType="String" resultType="map">
		select substr(GS_DEP_DATE,1,7) as 월, sum(GS_PAY_AMOUNT) as 총액, count(GS_PAY_AMOUNT) as 건수
		from GYM_SALES a
		where GS_STATE in ('이용중', '만료')
		and substr(replace(GS_DEP_DATE,'/',''),1,6) between to_number(#{date})-3 and to_number(#{date}) and gs_newandRepay = '재결제'
		group by substr(GS_DEP_DATE,1,7)
		order by substr(GS_DEP_DATE,1,7) asc
	</select>	
	<!-- 2page 방문회원 자별-->
	<select id="visitmem" parameterType="String" resultType="map">
		select mem_gender as 자별, count(a.mem_num) as 명
		from ADMISSION_HISTORY a, MEMBER m
		where a.mem_num = M.MEM_NUM and substr(replace(a.ah_date,'/',''),1,6) between to_number(#{date})-3 and to_number(#{date})
		group by mem_gender
	</select>	
	<!-- 2page 방문회원  시간대별, (서비스분류별)-->
	<select id="visittime" parameterType="String" resultType="map">
		select a.time as time, count(a.mem_num) as mcount
        from (select CASE WHEN substr(ah_entry_time,1,2) between 01 and 11 THEN '오전'
                    WHEN substr(ah_entry_time,1,2) between 12 and 24 THEN '오후'
               END AS time , mem_num, ah_date
            from ADMISSION_HISTORY) a , MEMBER m
		where a.mem_num = m.mem_num and substr(replace(a.ah_date,'/',''),1,6) between to_number(#{date})-3 and to_number(#{date})
        group by a.time
        order by time asc
	</select>	
	<!-- 2page 장소별 회원이용-->
	<select id="visitplace" parameterType="String" resultType="map">
	select ca.pro_place as 장소, count(m.mem_name) as 명
	from staff s, class_application ca, member m
	where s.STAFF_ID = ca.staff_id and ca.mem_num = m.mem_num
	and ca.att_num = 1 and substr(replace(ca.appli_date,'/',''),1,6) = #{date}
	group by ca.pro_place
	</select>
	<!-- 2page 방문회원 결제와 만료 회원-->
	<select id="visitpay" parameterType="String" resultType="map">
		select count(GS_PAY_AMOUNT) as newpay
		from GYM_SALES a 
		where GS_STATE in ('이용중', '만료')
		and substr(replace(GS_DEP_DATE,'/',''),1,6) between to_number(#{date})-3 and to_number(#{date}) and gs_public_private = '1'
		group by substr(GS_DEP_DATE,1,1)
		union all
		select count(GS_PAY_AMOUNT)
		from GYM_SALES a
		where GS_STATE in ('이용중', '만료') 
		and substr(replace(GS_DEP_DATE,'/',''),1,6) between to_number(#{date})-3 and to_number(#{date}) and gs_public_private = '2'
		group by substr(GS_DEP_DATE,1,1)
		union all
		select count(a.ticp_num)
		from ( select distinct tp.ticp_num , substr(replace(tp.ticp_reg_date,'/',''),3,4) as day,substr(replace(#{date},'/',''),2,6) as today,
		 p.ticket_num, m.mem_name, p.pro_name, p.pro_months
		from tic_purchase tp, program p, member m
		where TP.TICKET_NUM = p.ticket_num and tp.mem_num = m.mem_num
		and  to_number(substr(replace(tp.ticp_reg_date,'/',''),3,4)) + to_number(p.pro_months) = substr(replace(#{date},'/',''),2,6) 
		) a
		union all
		select count(a.ticp_num)
		from ( select distinct tp.ticp_num , substr(replace(tp.ticp_reg_date,'/',''),3,4) as day,substr(replace(#{date},'/',''),2,6) as today,
		 p.ticket_num, m.mem_name, p.pro_name, p.pro_months
		from tic_purchase tp, program p, member m
		where TP.TICKET_NUM = p.ticket_num and tp.mem_num = m.mem_num
		and  to_number(substr(replace(tp.ticp_reg_date,'/',''),3,4)) + to_number(p.pro_months) = substr(replace(#{date},'/',''),2,6) - 1
		) a
	</select>
	<!--3page 개인레슨 통계 -->
	<select id="privateProg" parameterType="map" resultType="map">    
	    select rownum,gs_dep_date,mem_name ,mem_hp,gs_dep_history,gs_state,gs_pay_amount,gs_account_due,gs_ref_amount,gs_billing_person,gs_pay_method
		from ( select distinct gs_dep_num, gs_dep_date,m.mem_name ,m.mem_hp,gs_dep_history,gs_state,gs_pay_amount,gs_account_due,gs_ref_amount,gs_billing_person,gs_pay_method
		        from GYM_SALES gs, member m, TIC_PURCHASE tp
		        where GS.GS_DEP_MEM = M.mem_num and M.MEM_NUM = TP.MEM_NUM and gs.gs_public_private = 1 
		        and GS.GS_STATE in ('이용중', '만료') and replace(GS.GS_DEP_DATE,'/','') between to_number(substr(replace(#{hap},'-',''),1,8)) 
		        and to_number(substr(replace(#{hap},'-',''),10,17))
		        order by  replace(GS.GS_DEP_DATE,'/','') ) a
         <if test = 'search == "결제내역"'>
         	where gs_dep_history like #{searchText}||'%'         
         </if>
         <if test = 'search == "구매회원"'>
         	where MEM_NAME like '%'||#{searchText}||'%' 
         </if>
         order by replace(GS_DEP_DATE,'/','') desc
	</select>	
	<!-- 3page 페이지네이션 count값 가져오기-->
	<select id="getCount" parameterType="map" resultType="int">
		select nvl(max(rownum),0) as rowmax
		from (select gs_dep_num,gs_dep_date,gs_pay_amount,gs_account_due,gs_ref_amount,gs_dep_mem
		    ,m.mem_hp,gs_dep_history,gs_state,GS.GS_NEWANDREPAY,gs_billing_person
		from GYM_SALES gs, member m, TIC_PURCHASE tp
		where GS.GS_DEP_MEM = M.mem_num and M.MEM_NUM = TP.MEM_NUM and gs.gs_public_private = 1
		and replace(GS.GS_DEP_DATE,'/','') between to_number(substr(replace(#{hap},'-',''),1,8)) and to_number(substr(replace(#{hap},'-',''),10,17))
		order by gs_dep_num) a		
	</select>	
	<!--3page 총 건수, 총매출, 총 회원수 .. -->
	<select id="privatehap" parameterType="map" resultType="map">
		select  count(gs_dep_num) as num, sum(gs_pay_amount) as amount, count(distinct m.mem_num) as mem
		from GYM_SALES gs, member m
		where GS.GS_DEP_MEM = M.mem_num and gs.gs_public_private = 1 and GS.GS_STATE in ('이용중', '만료') 
		and replace(GS.GS_DEP_DATE,'/','') between to_number(substr(replace(#{hap},'-',''),1,8)) and to_number(substr(replace(#{hap},'-',''),10,17))	
	</select>
	<!--3page 여자 -->
	<select id="privategender" parameterType="map" resultType="map">
		select count(distinct mem_num) as count
		from GYM_SALES gs, member m2
		where GS.GS_DEP_MEM = M2.mem_num and mem_gender = '여자'
		and gs.gs_public_private = 1 and GS.GS_STATE in ('이용중', '만료')
		and replace(GS.GS_DEP_DATE,'/','') between to_number(substr(replace(#{hap},'-',''),1,8)) and to_number(substr(replace(#{hap},'-',''),10,17))
	</select>
	<!--3page 남자 .. -->
	<select id="privategender2" parameterType="map" resultType="map">
		select count(distinct mem_num) as count
		from GYM_SALES gs, member m2
		where GS.GS_DEP_MEM = M2.mem_num and mem_gender = '남자'
		and gs.gs_public_private = 1 and GS.GS_STATE in ('이용중', '만료')
		and replace(GS.GS_DEP_DATE,'/','') between to_number(substr(replace(#{hap},'-',''),1,8)) and to_number(substr(replace(#{hap},'-',''),10,17))
	</select>
	<!--4page 그룹레슨 통계  -->
	<select id="publicProg" parameterType="map" resultType="map">
        select rownum,gs_dep_date,mem_name ,mem_hp,gs_dep_history,gs_state
              ,gs_pay_amount,gs_account_due,gs_ref_amount,gs_billing_person,gs_pay_method
		from ( select distinct gs_dep_num, gs_dep_date,m.mem_name ,m.mem_hp,gs_dep_history,gs_state,gs_pay_amount,gs_account_due,gs_ref_amount,gs_billing_person,gs_pay_method
		        from GYM_SALES gs, member m, TIC_PURCHASE tp
		        where GS.GS_DEP_MEM = M.mem_num and M.MEM_NUM = TP.MEM_NUM and gs.gs_public_private = 2 
		        and GS.GS_STATE in ('이용중', '만료') and replace(GS.GS_DEP_DATE,'/','') between to_number(substr(replace(#{hap},'-',''),1,8)) 
		        and to_number(substr(replace(#{hap},'-',''),10,17))
		        order by  replace(GS.GS_DEP_DATE,'/','') ) a	
        <if test = 'search == "결제내역"'>
         	where gs_dep_history like #{searchText}||'%'         
         </if>
         <if test = 'search == "구매회원"'>
         	where MEM_NAME like '%'||#{searchText}||'%' 
         </if>
         order by replace(GS_DEP_DATE,'/','') desc
	</select>		
	<!--4page 총 건수, 총매출, 총 회원수 .. 평균 강의듣는 사람숫자??-->
	<select id="publichap" parameterType="map" resultType="map">
		select  count(gs_dep_num) as num, sum(gs_pay_amount) as amount, count(distinct m.mem_num) as mem
		from GYM_SALES gs, member m
		where GS.GS_DEP_MEM = M.mem_num and gs.gs_public_private = 2 and GS.GS_STATE in ('이용중', '만료')
		and replace(GS.GS_DEP_DATE,'/','') between to_number(substr(replace(#{hap},'-',''),1,8)) and to_number(substr(replace(#{hap},'-',''),10,17)) 
	</select>
	<!--4page 여자 -->
	<select id="publicgender" parameterType="map" resultType="map">
		select count(mem_num) as count
        from GYM_SALES gs, member m2
        where GS.GS_DEP_MEM = M2.mem_num and mem_gender = '여자'
        and gs.gs_public_private = 2 and GS.GS_STATE in ('이용중', '만료')
        and replace(GS.GS_DEP_DATE,'/','') between to_number(substr(replace(#{hap},'-',''),1,8)) and to_number(substr(replace(#{hap},'-',''),10,17))
	</select>
	<!--4page 남자 .. -->
	<select id="publicgender2" parameterType="map" resultType="map">
		select count(mem_num) as count
        from GYM_SALES gs, member m2
        where GS.GS_DEP_MEM = M2.mem_num and mem_gender = '남자'
        and gs.gs_public_private = 2 and GS.GS_STATE in ('이용중', '만료')
        and replace(GS.GS_DEP_DATE,'/','') between to_number(substr(replace(#{hap},'-',''),1,8)) and to_number(substr(replace(#{hap},'-',''),10,17))
	</select>
	<!--   ======================= 수근끝 ================================== -->
	
</mapper> 
 