<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.ScheduleMapper">
	<select id="test4">
		SELECT 1 FROM dual
	</select>
<!-- ======================================= [[ 경애  ]] ====================================== -->
<!-- 예약관리에서 콤보박스에 해당하는 값 가져오기 -->
	<resultMap id="staff_map" type="map"/>
	<resultMap id="place_map" type="map"/>
	<resultMap id="ticket_map" type="map"/>
	<select id="scheduleModal" parameterType="map" statementType="CALLABLE">
		{call proc_schedulemodal2(
						 #{mem_num, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
					   , #{login_id, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
				       , #{staffList, mode=OUT, jdbcType=CURSOR, javaType=java.sql.ResultSet, resultMap=staff_map}
				       , #{placeList, mode=OUT, jdbcType=CURSOR, javaType=java.sql.ResultSet, resultMap=place_map}
					   , #{ticketList, mode=OUT, jdbcType=CURSOR, javaType=java.sql.ResultSet, resultMap=ticket_map}
				      
		)}
	</select>
	<select id="reservationINS" parameterType="map" statementType="CALLABLE">
<!-- 수업 예약했을 시 insert -->
		{call proc_class_applicationINS(
						 #{sm_staffid, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
						 ,#{appli_start_time, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
						 ,#{appli_end_time, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
						 ,#{sm_mem_num, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
						 ,#{ep_name, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
						 ,#{appli_date, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
					     ,#{result, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</select>
	<select id="reservationUPD" parameterType="map" statementType="CALLABLE">
<!-- 예약 변경했을 시 UPDATE -->
		{call proc_class_applicationUPD(
						 #{sm_staffid, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
						 ,#{appli_start_time, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
						 ,#{appli_end_time, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
						 ,#{sm_mem_num, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
						 ,#{ep_name, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
						 ,#{appli_date, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
						 ,#{appli_num, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
					     ,#{result, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
		)}
	</select>
<!-- 스케줄내역 -->
<!-- 	<parameterMap type="string" id="loginid"></parameterMap> -->
	<select id="scheduleList" parameterType="string" resultType="map">
<!-- 		SELECT appli_start_time, appli_end_time, appli_date, pro_place, att_num, mem_name, member.mem_num, staff_name, staff.staff_id, appli_num
		  FROM class_application, staff, member, program
		 WHERE class_application.mem_num = member.mem_num
		   AND class_application.staff_id = staff.staff_id
		   AND staff.staff_id = #{login_id}
		   AND staff.staff_id = program.staff_id -->
		     
    SELECT  mem_name, appli_date,appli_start_time, appli_end_time,pro_place, staff_name, s.staff_id, ca.att_num, m.mem_num,appli_num
      FROM staff s, program p, ticket t, tic_purchase tp, member m, class_application ca, attendance a,persnel_info pi
     WHERE s.staff_id = #{login_id}
       AND s.staff_id = p.staff_id
       AND p.ticket_num = t.ticket_num
       AND p.pro_limit_people IS NULL
       AND T.TICKET_NUM = tp.ticket_num
       AND tp.mem_num = m.mem_num
       AND m.mem_num = ca.mem_num
       AND ca.staff_id = s.staff_id
       AND ca.att_num = a.att_num
       AND s.pi_num = pi.pi_num
     GROUP BY  mem_name, appli_date,appli_start_time, appli_end_time,pro_place, staff_name, s.staff_id, ca.att_num, m.mem_num,appli_num
     UNION
    SELECT  mem_name, appli_date,appli_start_time, appli_end_time,pro_place, staff_name, s.staff_id, ca.att_num, m.mem_num,appli_num
      FROM staff s, program p, promotion_prog pp, promotion prom, tic_purchase tp, member m, class_application ca, attendance a,persnel_info pi
     WHERE s.staff_id = #{login_id}
       AND s.staff_id = p.staff_id
       AND p.pro_limit_people IS NULL
       AND p.pro_num = pp.pro_num
       AND pp.prom_num = prom.prom_num
       AND prom.prom_num = tp.prom_num
       AND tp.mem_num = m.mem_num
       AND m.mem_num = ca.mem_num
       AND ca.staff_id = s.staff_id
       AND ca.att_num = a.att_num
       AND s.pi_num = pi.pi_num
     GROUP BY  mem_name, appli_date,appli_start_time, appli_end_time,pro_place, staff_name, s.staff_id, ca.att_num, m.mem_num,appli_num
      UNION
     SELECT pro_name,appli_date, appli_start_time, appli_end_time,  pro_place, staff_name, s.staff_id, ca.att_num, to_number(''), to_number('')
      FROM staff s, program p, ticket t, tic_purchase tp, member m, class_application ca, persnel_info pi
     WHERE s.staff_id = #{login_id}
       AND s.staff_id = p.staff_id
       AND p.ticket_num = t.ticket_num
       AND p.pro_limit_people IS NOT NULL
       AND T.TICKET_NUM = tp.ticket_num
       AND tp.mem_num = m.mem_num
       AND m.mem_num = ca.mem_num
       AND ca.staff_id = s.staff_id
       AND ca.att_num = att_num
       AND s.pi_num = pi.pi_num
     GROUP BY pro_name,appli_date, appli_start_time, appli_end_time,  pro_place, staff_name, s.staff_id, ca.att_num, to_number(''), to_number('')
     ORDER BY appli_date
	</select>
	<update id="caUPD" parameterType="map">
		UPDATE class_application
		   SET att_num = #{att_num}
		 WHERE appli_num = #{appli_num}
	</update>
	<select id="staffList" resultType="map">
		SELECT staff_id,staff_name
		  FROM staff
	</select>
	<select id="reservation" parameterType="map" resultType="map">
	SELECT  rownum rno,appli_date, appli_start_time, mem_name, mem_hp, staff_name,pro_name, att_check 
	 FROM (
	 SELECT appli_date, appli_start_time, mem_name, mem_hp, staff_name,pro_name, att_check  
             FROM class_application cp, staff s, member m, program p, attendance a,TIC_PURCHASE tp,ticket t
            WHERE CP.MEM_NUM = m.mem_num
              AND cp.staff_id = s.staff_id
              AND s.staff_id = p.staff_id
              AND cp.att_num = a.att_num
              AND s.staff_id= #{staff_id}
              AND m.mem_num = tp.mem_num
              AND tp.ticket_num = t.ticket_num
              AND t.ticket_num = p.ticket_num
  UNION
   SELECT appli_date, appli_start_time, mem_name, mem_hp, staff_name,pro_name, att_check  
             FROM class_application cp, staff s, member m, program p, attendance a,TIC_PURCHASE tp,promotion prom, promotion_prog pp
            WHERE CP.MEM_NUM = m.mem_num
              AND cp.staff_id = s.staff_id
              AND s.staff_id = p.staff_id
              AND cp.att_num = a.att_num
              AND s.staff_id= #{staff_id}
              AND m.mem_num = tp.mem_num
              AND tp.prom_num = prom.prom_num
              AND prom.prom_num = pp.pro_num
              AND pp.pro_num = p.pro_num
        <if test="period != null and period == year">
			  AND substr(appli_date,0,4) = to_char(sysdate,'yyyy');  
		</if>
		 <if test="period != null and period == quarter">
			  AND substr(appli_date,0,7) = to_char(sysdate,'yyyy/mm');  
		</if>
		 <if test="period != null and period == month">
			  AND substr(appli_date,0,7) = to_char(sysdate,'yyyy/mm');  
		</if>
		 <if test="period != null and period == today">
			  AND appli_date = to_char(sysdate,'yyyy/mm/dd');  
		</if>
      ORDER BY appli_date asc, appli_start_time asc
              )
	   WHERE 1=1
	  <if test="keyword != null">
		   OR rno LIKE '%'||#{keyword}||'%'
		   OR appli_date  LIKE '%'||#{keyword}||'%'
		   OR appli_start_time  LIKE '%'||#{keyword}||'%'
		   OR mem_name  LIKE '%'||#{keyword}||'%'
		   OR mem_hp  LIKE '%'||#{keyword}||'%'
		   OR staff_name  LIKE '%'||#{keyword}||'%'
		   OR pro_name  LIKE '%'||#{keyword}||'%'
		   OR att_check  LIKE '%'||#{keyword}||'%'
		</if>
		ORDER BY rno desc 	 
	</select>
<!-- ======================================= [[ 경애  ]] ====================================== -->
	
</mapper> 
 